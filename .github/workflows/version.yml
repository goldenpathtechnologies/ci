name: Version

on:
  push:
    # TODO: Remove sdlc branch here and in semantic-release config when release management is complete.
    branches:
      - main
      - sdlc
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:

  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - name: Generate semantic-release configuration
        run: |
          cat << EOF > .releaserc
          {
            "branches": [
              "main",
              {
                "name": "sdlc",
                "prerelease": true
              },
              {
                "name": "dev",
                "prerelease": true
              }
            ],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/changelog",
              "@semantic-release/git"
            ],
            "preset": "conventionalcommits",
            "parserOpts": {
              "noteKeywords": ["BREAKING CHANGE", "BREAKING CHANGES", "BREAKING"]
            },
            "writerOpts": {
              "commitsSort": ["subject", "scope"]
            },
            "message": "chore(release): \${nextRelease.version}\\n\\n\${nextRelease.notes}"
          }
          EOF
      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npx \
          -p @semantic-release/git \
          -p @semantic-release/commit-analyzer \
          -p @semantic-release/release-notes-generator \
          -p @semantic-release/changelog \
          -p conventional-changelog-conventionalcommits \
          semantic-release
