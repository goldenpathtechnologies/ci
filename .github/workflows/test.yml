name: Test, analyze, and version

on:
  push:
    paths-ignore:
      - CHANGELOG.md
      - README.md
      - LICENSE
      - .github/CODE_OF_CONDUCT.md
      - .gitattributes
      - .gitignore
  pull_request:
    paths-ignore:
      - CHANGELOG.md
      - README.md
      - LICENSE
      - .github/CODE_OF_CONDUCT.md
      - .gitattributes
      - .gitignore

env:
  GO_VERSION: 1.17

jobs:
  test-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{secrets.GH_TOKEN}}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}

      - name: Set up gotestfmt
        run: go install github.com/haveyoudebuggedit/gotestfmt/v2/cmd/gotestfmt@latest

      - name: Run tests
        run: |
          set -euo pipefail
          go test -json -v ./... 2>&1 | tee /tmp/gotest.log | gotestfmt

  test-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{secrets.GH_TOKEN}}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}

      - name: Set up gotestfmt
        run: go install github.com/haveyoudebuggedit/gotestfmt/v2/cmd/gotestfmt@latest

      - name: Run tests
        run: |
          set -euo pipefail
          go test -json -v ./... 2>&1 | tee /tmp/gotest.log | gotestfmt

  cover-analysis-linux:
    runs-on: ubuntu-latest
    needs:
      - test-linux
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{secrets.GH_TOKEN}}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}

  cover-analysis-windows:
    runs-on: windows-latest
    needs:
      - test-windows
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{secrets.GH_TOKEN}}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}

  # TODO: Consider adding a security and license scanning job to this workflow. Explore several options, but start here:
  #  https://github.com/marketplace/actions/security-and-licence-scan

  version:
    runs-on: ubuntu-latest
    needs:
      - cover-analysis-linux
      - cover-analysis-windows
    if: ${{ github.ref_name == 'main' || github.ref_name == 'dev' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{secrets.GH_TOKEN}}
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - name: Generate semantic-release configuration
        run: |
          cat << EOF > .releaserc
          {
            "branches": [
              "main",
              {
                "name": "dev",
                "prerelease": true
              }
            ],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/changelog",
              "@semantic-release/git"
            ],
            "preset": "conventionalcommits",
            "parserOpts": {
              "noteKeywords": ["BREAKING CHANGE", "BREAKING CHANGES", "BREAKING"]
            },
            "writerOpts": {
              "commitsSort": ["subject", "scope"]
            },
            "message": "chore(release): \${nextRelease.version}\\n\\n\${nextRelease.notes}"
          }
          EOF
      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
        run: |
          npx \
          -p @semantic-release/git \
          -p @semantic-release/commit-analyzer \
          -p @semantic-release/release-notes-generator \
          -p @semantic-release/changelog \
          -p conventional-changelog-conventionalcommits \
          semantic-release